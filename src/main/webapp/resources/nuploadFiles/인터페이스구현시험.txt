요구사항 1-1. import할 파일명과 프로젝트 내에 import할 경로를 서술하시오. 

mybatis-3.5.13.jar 파일을 src/main/webapp/WEB-INF/lib 폴더 안에 import



요구사항 2-1. org.kh.member.model.vo 패키지 밑에 MemberVO 클래스, mapper/member 폴더 밑에 member-mapper.xml 파일을 생성하고 resources 폴더 아래 mybatis-config.xml 리소스 파일에 mapper xml파일을 등록하고 VO객체의 별칭을 등록한다. 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC 
"-//mybatis.org//DTD Config 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-config.dtd" >
<configuration>
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC"/>
			<dataSource type="POOLED">
				<property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
				<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
				<property name="username" value="MYBATIS"/>
				<property name="password" value="MYBATIS"/>
			</dataSource>
		</environment>
	</environments>
	<mappers>
		<mapper resource="mapper/member/member-mapper.xml"/>
	</mappers>
</configuration>






요구사항 3-1. SqlSession을 생성하기 위한 코드를 작성하시오  

package org.kh.common;

import java.io.IOException;
import java.io.InputStream;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

public class SqlSessionTemplate {
	public static SqlSession getSqlSession() {
		SqlSession session = null;
		// 해당 리소스 경로(xml파일) 작성
		String resource = "mybatis-config.xml";
		try {
			InputStream is = Resources.getResourceAsStream(resource);
			SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();
			SqlSessionFactory factory = builder.build(is);
			session = factory.openSession();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return session; // 생성된 SqlSession 리턴
	}
}





요구사항 4-1. xml 태그를 이용하여 Query문을 작성하시오(단, 네임스페이스는 mybatis, id는 insertMember로 한다.) 


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatis">
	<insert id="insertMember">
		INSERT INTO MEMBER VALUES(SEQ_MEMBER.NEXTVAL, #{userId}, #{userPw}, #{userName}, #{userAddr}, DEFAULT)
	</insert>
</mapper>​







요구사항 5-1. Service 클래스에서 공통으로 만들어 놓은 SqlSession을 이용하여 연결을 생성한 후 커밋과 롤백을 처리하도록 작성하시오. 


package org.kh.member.model.service;

import org.apache.ibatis.session.SqlSession;
import org.kh.common.SqlSessionTemplate;
import org.kh.member.model.dao.MemberDAO;
import org.kh.member.model.vo.MemberVO;

public class MemberService {
	
	private MemberDAO mDao;
	
	public MemberService() {
		mDao = new MemberDAO();
	}
	
	public int insertMember(MemberVO mOne) {
		SqlSession session = SqlSessionTemplate.getSqlSession();
		int result = mDao.insertMember(session, mOne);
		if(result > 0) {
			session.commit();
		} else {
			session.rollback();
		}
		session.close();
		return result;
	}
}



6-1. Service 클래스에서 넘겨준 Session을 이용하여 Database에서 쿼리문을 실행하는 코드를 작성하시오. 

package org.kh.member.model.dao;

import org.apache.ibatis.session.SqlSession;
import org.kh.member.model.vo.MemberVO;

public class MemberDAO {

	public int insertMember(SqlSession session, MemberVO mOne) {
		int result = session.insert("mybatis.insertMember", mOne);
		return result;
	}
	
}




















